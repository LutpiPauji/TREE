#include <iostream.h>
#include <conio.h>
#include <stdio.h>
#include <malloc.h>
#define nil NULL
struct nod
{
	struct nod *left;char
   data;struct nod *right;
};
typedef struct nod NOD;
typedef NOD POKOK;
	NOD *NodBaru (char item){
   	nod *n;n=(NOD*)malloc (sizeof(NOD));
   if (n!=NULL){
   	n->data=item;
      n->left=NULL;
      n->right=NULL;
   }
   return n;
}

void BinaPokok (POKOK **T){
	*T=NULL;
}
bool PokokKosong (POKOK *T){
	return ((bool)(T==NULL));
}
void TambahNod (NOD **p, char item){
	NOD *n;
   n=NodBaru(item);
   *p=n;
}

void preorder (POKOK *T){
	if (!PokokKosong(T)){
   	cout<<" "<<T->data;preorder(T->left);preorder (T->right);
   }
}

void inorder (POKOK *T){
	if (!PokokKosong(T)){
   	inorder(T->left);
      cout<<" "<<T->data;inorder(T->right);
   }
}
void postorder (POKOK *T){
	if (!PokokKosong(T)){
   	postorder(T->left);
      postorder(T->right);
      cout<<" "<<T->data;
   }
}
int main ()
{
		POKOK *kelapa;
      char buah;
      BinaPokok(&kelapa);
      TambahNod(&kelapa,buah=' M ');
      TambahNod(&kelapa->left,buah=' E ');
      TambahNod(&kelapa->left->right,buah=' I ');
      TambahNod(&kelapa->right,buah =' L ');
      TambahNod(&kelapa->right->right,buah=' O ');
      TambahNod(&kelapa->right->right->left,buah =' D ');
      cout<<"Tampilan secara preorder : ";
      preorder(kelapa);
      cout<<endl;
      cout<<"Tampilan secara inorder : ";
      inorder(kelapa);
      cout<<endl;
      cout<<"Tampilan secara postorder : ";
      postorder(kelapa);
      cout<<endl;
      cout<<endl;

      getch ();
      return 0;
      }
